// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1e000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002020202020202000000000202020000000000000000000000000000000200000000000000020202020200000000000000010000000000000000000202020202020202020202020000000000000000000002020202020202020200020000000000000000000202000000000000000000020202020202020202020202020202020202020200020202020200`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.swamp.swampTile3,sprites.castle.tilePath5], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`3c0008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d000000000000000000000000000000000000000000000000000c090b00000c090b00000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000c090b0000000000000000000000000000000000000000000000000000000000000000000000000004070a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000506040a0000000000000000000000000000000000000c090b0000000000000000000000000000000000000000000000000000000000000000000000050505030a00000000000c090b0000000c090b0000000000000000000000000000000000000000000c090b000000000000000c0b00000000000000000505050504070708020102010201020102010201020102010201020102010201020102010201020102010201020102010201020102010e07000010080505050505050504010201020102010201020102010201020102010201020102010201020102010201020102010201020102010201020f0400110f04`, img`
............................................................
..........................222..222..........................
2...................222.....................................
222.........................................................
..22..................222...................................
...22.....222...222.....................222.......22........
....2222..............................................22..22
.......2..............................................22..22
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.hazardLava0,sprites.builtin.forestTiles11,sprites.builtin.forestTiles7,sprites.builtin.forestTiles10,sprites.builtin.forestTiles6,sprites.builtin.forestTiles25,sprites.builtin.forestTiles28,sprites.builtin.forestTiles18,sprites.builtin.forestTiles26,sprites.builtin.forestTiles19,sprites.builtin.forestTiles17,sprites.swamp.swampTile3,sprites.builtin.forestTiles24,sprites.builtin.forestTiles5,sprites.builtin.forestTiles27,sprites.castle.saplingPine], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex`a0b0101010101030101010101010101010101030301010101010101010101030101010101010101010101010101010101010809`, img`
22.......22222.......22222.......22222.......2....
...22222.22....22222.22....22222.2.....22222.2....
.222..22.222.222..22.22.2222..22.2.2.222..22.222..
...........2............2..........2...........2..
2222.22222.22222.22.22222222.22222.22222.22222.2..
2222.2..22.22222.22.22222222.2..22.22222.2..2222..
.....2...........22..........2....................
222222222222222222222222222222222222222222222222..
`, [myTiles.transparency16,sprites.builtin.forestTiles6,sprites.builtin.forestTiles5,sprites.builtin.forestTiles10,sprites.builtin.forestTiles11,sprites.builtin.forestTiles7,myTiles.tile1,sprites.builtin.forestTiles9,sprites.builtin.forestTiles22,sprites.builtin.forestTiles23,sprites.swamp.swampTile2,sprites.castle.saplingPine], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex`1e00080000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000141300001400000000000000000000000c00000000000000000000000000000a010b00000010000a01010b00001500000012000014000000000000000c0204090c000f01010204040901010101010111010b00000c0000000000020808080901010204080808080404040404040404090000000000000c00030808080804090308080808080808080808080808060000000000000000030808080808060508080808080808080808080808060e0d0e0d0e0d0e0d03080808080807`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . 
. . . . . . . . . 2 . . . . . . . . . . . . . . 2 2 2 . . . 
. . 2 2 2 2 . . . . . . . . . . . . . . . . . 2 2 . 2 2 . . 
2 2 2 . . 2 2 2 2 2 2 2 2 2 2 . . 2 . . . . . 2 . . . 2 2 2 
2 . . . . . . . . . . . . . 2 . . . . . . 2 . 2 . . . . . 2 
2 . . . . . . . . . . . . . 2 . . . . . . . . 2 . . . . . 2 
2 . . . . . . . . . . . . . 2 . . . . . . . . 2 . . . . . 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles2,sprites.builtin.forestTiles5,sprites.builtin.forestTiles9,sprites.builtin.forestTiles6,sprites.builtin.forestTiles13,sprites.builtin.forestTiles11,sprites.builtin.forestTiles15,sprites.builtin.forestTiles10,sprites.builtin.forestTiles7,sprites.builtin.forestTiles1,sprites.builtin.forestTiles3,sprites.builtin.forestTiles4,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,sprites.castle.saplingPine,sprites.swamp.swampTile3,myTiles.tile4,myTiles.tile3,myTiles.tile5,myTiles.tile7,myTiles.tile6], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile4":
            case "tile6":return tile6;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
